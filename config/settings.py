from dataclasses import dataclass, field
import os

# === –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –±–æ—Ç–∞ ===
@dataclass
class BotConfig:
    TOKEN: str = os.getenv("TELEGRAM_BOT_TOKEN", "")
    MAX_STORY_LENGTH: int = 4000
    COOLDOWN_SECONDS: int = 5


# === –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è GigaChat ===
@dataclass
class GigaChatConfig:
    AUTH_KEY: str = os.getenv("GIGACHAT_AUTH_KEY", "")
    SCOPE: str = "GIGACHAT_API_PERS"
    MODEL: str = "GigaChat"
    TIMEOUT: int = 30
    TEMPERATURE: float = 0.7
    MAX_TOKENS: int = 800


# === –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è TTS ===
@dataclass
class TTSConfig:
    API_KEY: str = os.getenv("YANDEX_API_KEY", "")
    LANGUAGE: str = "ru-RU"
    VOICE: str = "oksana"
    EMOTION: str = "good"
    SPEED: float = 1.0
    FORMAT: str = "mp3"


# === –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è LLM (–≤—ã–±–æ—Ä –ø—Ä–æ–≤–∞–π–¥–µ—Ä–∞) ===
@dataclass
class LLMConfig:
    PROVIDER: str = os.getenv("LLM_PROVIDER", "gigachat")  
    # –≤–∞—Ä–∏–∞–Ω—Ç—ã: "gigachat", "openai", "gemini", "deepseek"


# === –°–æ–æ–±—â–µ–Ω–∏—è –æ–± –æ—à–∏–±–∫–∞—Ö ===
@dataclass
class ErrorMessages:
    GENERIC_ERROR: str = "üòî –ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫. –ü–æ–ø—Ä–æ–±—É–π –µ—â—ë —Ä–∞–∑!"
    TTS_ERROR: str = "‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –æ–∑–≤—É—á–∏—Ç—å —Å–∫–∞–∑–∫—É."
    DEFAULT: str = "‚ö†Ô∏è –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞."


# === –û–±—â–∞—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è ===
@dataclass
class Config:
    bot: BotConfig = field(default_factory=BotConfig)
    gigachat: GigaChatConfig = field(default_factory=GigaChatConfig)
    tts: TTSConfig = field(default_factory=TTSConfig)
    llm: LLMConfig = field(default_factory=LLMConfig)
    errors: ErrorMessages = field(default_factory=ErrorMessages)

    def validate(self):
        if not self.bot.TOKEN:
            raise ValueError("TELEGRAM_BOT_TOKEN –Ω–µ –∑–∞–¥–∞–Ω")
        if not self.gigachat.AUTH_KEY:
            raise ValueError("GIGACHAT_AUTH_KEY –Ω–µ –∑–∞–¥–∞–Ω")


# === –ì–ª–æ–±–∞–ª—å–Ω—ã–π –æ–±—ä–µ–∫—Ç ===
config = Config()
